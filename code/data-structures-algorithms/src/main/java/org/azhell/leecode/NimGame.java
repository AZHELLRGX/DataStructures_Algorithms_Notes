package org.azhell.leecode;

import org.azhell.tool.Utils;

/**
 * 292. Nim 游戏
 * 博弈问题
 * 本题主要是考察思维，做出结论
 * 根据题意，我们尝试从小范围数据的情况进行讨论：
 * 1. 如果落到先手的局面为「 石子数量 为 1 - 3 」的话，那么 先手必胜；
 * 2. 如果落到先手的局面为「 石子数量 为 4 」的话，那么先手决策完（无论何种决
 * 策），交到后手的局面为「石子数量为 1 - 3 」，即此时后手必胜，对应 先手必 败
 * （到这里我们有一个推论：如果交给先手的局面为 4 的话，那么先手必败）；
 * 3. 如果落到先手的局面为「 石子数量 为 5 - 7 」的话，那么先手可以通过控制选择石子
 * 的数量，来使得后手处于「石子数量为 4 」的局面（此时后手必败），因此 先手必
 * 胜；
 * 4. 如果落到先手的局面为「 石子数量 为 8 」的话，由于每次只能选 1 - 3 个石子，因此
 * 交由后手的局面为 5 - 7 ，根据流程 3 我们知道此时 先手必 败；
 * …
 * 到这里，我们猜想  当起始局面石子数量 为 4 的倍数， 则 先手必 败 ，否 则 先手必胜（即
 * n % 4 != 0 时，先手必胜）。
 * 然后我们通过「归纳法」证明一下该猜想的正确性。
 * 在上面的「找规律」分析中，我们分情况讨论了最后一个决胜回合（我们称「剩余石子数量少于
 * 等于 4 的局面」为最后回合）的情况： 如果交由先手的石子数量 为 4 ，那么先手必 败 ，否 则先 先
 * 手必胜。
 */
public class NimGame {
    public static void main(String[] args) {
        NimGame n = new NimGame();
        Utils.print(n.canWinNim(4));
        Utils.print(n.canWinNim(1));
    }

    public boolean canWinNim(int n) {
        return n % 4 != 0;
    }
}
